// <auto-generated />
using System;
using CurrencyApp.Infrastructure.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CurrencyApp.Infrastructure.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CurrencyApp.Infrastructure.EF.Models.Role", b =>
                {
                    b.Property<byte>("RolePK")
                        .HasColumnType("tinyint");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolePK");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolePK = (byte)1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RolePK = (byte)2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("CurrencyApp.Infrastructure.EF.Models.User", b =>
                {
                    b.Property<Guid>("UserPK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("RolePK")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserPK");

                    b.HasIndex("RolePK");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserPK = new Guid("b9ce9477-7eb6-4444-b411-554895bf3272"),
                            PasswordHash = "25-F4-3B-14-86-AD-95-A1-39-8E-3E-EB-3D-83-BC-40-10-01-5F-CC-9B-ED-B3-5B-43-2E-00-29-8D-50-21-F7",
                            RolePK = (byte)1,
                            UserName = "admin1"
                        },
                        new
                        {
                            UserPK = new Guid("fe16b2fd-ab54-4a10-b69e-a43215ed7a75"),
                            PasswordHash = "0A-04-1B-94-62-CA-A4-A3-1B-AC-35-67-E0-B6-E6-FD-91-00-78-7D-B2-AB-43-3D-96-F6-D1-78-CA-BF-CE-90",
                            RolePK = (byte)2,
                            UserName = "user1"
                        });
                });

            modelBuilder.Entity("CurrencyApp.Infrastructure.EF.Models.User", b =>
                {
                    b.HasOne("CurrencyApp.Infrastructure.EF.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RolePK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CurrencyApp.Infrastructure.EF.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
